stages:
  - install
  - test
  - code_quality
  - security
  - build
  - scan
  - deploy

# ------------------ INSTALL ------------------
install_backend:
  stage: install
  script:
    - cd backend
    - npm install
  artifacts:
    paths:
      - backend/node_modules/
  tags:
    - docker

install_frontend:
  stage: install
  script:
    - cd frontend
    - npm install
  artifacts:
    paths:
      - frontend/node_modules/
  tags:
    - docker

# ------------------ TEST ------------------
run_backend_tests:
  stage: test
  script:
    - cd backend
    - npm test
  tags:
    - docker

run_frontend_tests:
  stage: test
  script:
    - cd frontend
    - npm test
  tags:
    - docker

# ------------------ CODE QUALITY ------------------
eslint_check:
  stage: code_quality
  script:
    - cd frontend
    - npx eslint .
  tags:
    - docker

# ------------------ SECURITY ------------------
snyk_scan:
  stage: security
  script:
    - snyk test --all-projects
  tags:
    - docker

# ------------------ BUILD ------------------
build_images:
  stage: build
  script:
    - docker-compose -f docker-compose.yml -p devsecops_flawless build
  tags:
    - docker

# ------------------ TRIVY SCAN ------------------
trivy_scan:
  stage: scan
  needs:
    - build_images
  script:
    - trivy image devsecops_flawless_api:latest
    - trivy image devsecops_flawless_web:latest
  tags:
    - docker

# ------------------ DEPLOY ------------------
deploy_app:
  stage: deploy
  needs:
    - trivy_scan
  script:
    - docker-compose -f docker-compose.yml -p devsecops_flawless up -d --build
  only:
    - main
  tags:
    - docker

